// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`platform/github/index createPr() should create a draftPR if set in the settings 1`] = `
Object {
  "displayNumber": "Pull Request #123",
  "head": Object {
    "repo": Object {
      "full_name": "some/repo",
    },
  },
  "number": 123,
  "sourceBranch": "some-branch",
  "sourceRepo": "some/repo",
}
`;

exports[`platform/github/index createPr() should create and return a PR object 1`] = `
Object {
  "displayNumber": "Pull Request #123",
  "head": Object {
    "repo": Object {
      "full_name": "some/repo",
    },
  },
  "number": 123,
  "sourceBranch": "some-branch",
  "sourceRepo": "some/repo",
}
`;

exports[`platform/github/index createPr() should use defaultBranch 1`] = `
Object {
  "displayNumber": "Pull Request #123",
  "head": Object {
    "repo": Object {
      "full_name": "some/repo",
    },
  },
  "number": 123,
  "sourceBranch": "some-branch",
  "sourceRepo": "some/repo",
}
`;

exports[`platform/github/index getBranchPr(branchName) should reopen an autoclosed PR 1`] = `
Object {
  "additions": 1,
  "base": Object {
    "sha": "1234",
  },
  "canMerge": false,
  "canMergeReason": "mergeable = undefined",
  "commits": 1,
  "deletions": 1,
  "displayNumber": "Pull Request #91",
  "head": Object {
    "ref": "somebranch",
    "repo": Object {
      "full_name": "some/repo",
    },
  },
  "number": 91,
  "sha": undefined,
  "sourceBranch": "somebranch",
  "state": "open",
}
`;

exports[`platform/github/index getBranchPr(branchName) should return the PR object 1`] = `
Object {
  "additions": 1,
  "base": Object {
    "sha": "1234",
  },
  "canMerge": false,
  "canMergeReason": "mergeable = undefined",
  "commits": 1,
  "deletions": 1,
  "displayNumber": "Pull Request #91",
  "head": Object {
    "ref": "somebranch",
    "repo": Object {
      "full_name": "some/repo",
    },
  },
  "number": 91,
  "sha": undefined,
  "sourceBranch": "somebranch",
  "state": "open",
}
`;

exports[`platform/github/index getBranchPr(branchName) should return the PR object in fork mode 1`] = `
Object {
  "additions": 1,
  "base": Object {
    "sha": "1234",
  },
  "canMerge": false,
  "canMergeReason": "mergeable = undefined",
  "commits": 1,
  "deletions": 1,
  "displayNumber": "Pull Request #90",
  "head": Object {
    "ref": "somebranch",
    "repo": Object {
      "full_name": "other/repo",
    },
  },
  "number": 90,
  "sha": undefined,
  "sourceBranch": "somebranch",
  "state": "open",
}
`;

exports[`platform/github/index getPr(prNo) should return PR from closed graphql result 1`] = `
Object {
  "body": "dummy body",
  "comments": Array [
    Object {
      "body": ":tada: This PR is included in version 13.63.5 :tada:

The release is available on:
- [npm package (@latest dist-tag)](https://www.npmjs.com/package/renovate)
- [GitHub release](https://github.com/renovatebot/renovate/releases/tag/13.63.5)

Your **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
      "id": 420006957,
    },
  ],
  "displayNumber": "Pull Request #2499",
  "number": 2499,
  "sourceBranch": "renovate/delay-4.x",
  "state": "merged",
  "title": "build(deps): update dependency delay to v4.0.1",
}
`;

exports[`platform/github/index getPr(prNo) should return PR from graphql result 1`] = `
Object {
  "canMerge": false,
  "canMergeReason": "mergeStateStatus = DIRTY",
  "displayNumber": "Pull Request #2500",
  "hasAssignees": false,
  "hasReviewers": false,
  "isConflicted": true,
  "number": 2500,
  "sourceBranch": "renovate/jest-monorepo",
  "state": "open",
  "targetBranch": "master",
  "title": "chore(deps): update dependency jest to v23.6.0",
}
`;

exports[`platform/github/index getPr(prNo) should return a PR object - 0 1`] = `
Object {
  "base": Object {
    "sha": "1234",
  },
  "displayNumber": "Pull Request #1",
  "mergeable": true,
  "merged_at": "sometime",
  "number": 1,
  "state": "closed",
}
`;

exports[`platform/github/index getPr(prNo) should return a PR object - 1 1`] = `
Object {
  "base": Object {
    "sha": "1234",
  },
  "canMerge": false,
  "canMergeReason": "mergeable = undefined",
  "commits": 1,
  "displayNumber": "Pull Request #1",
  "isConflicted": true,
  "mergeable_state": "dirty",
  "number": 1,
  "sha": undefined,
  "sourceBranch": undefined,
  "state": "open",
}
`;

exports[`platform/github/index getPr(prNo) should return a PR object - 2 1`] = `
Object {
  "base": Object {
    "sha": "5678",
  },
  "canMerge": true,
  "commits": 1,
  "displayNumber": "Pull Request #1",
  "mergeable": true,
  "number": 1,
  "sha": undefined,
  "sourceBranch": undefined,
  "state": "open",
}
`;

exports[`platform/github/index getRepoForceRebase should throw 401 1`] = `"Response code 401 (Unauthorized)"`;

exports[`platform/github/index getRepos should return an array of repos 1`] = `
Array [
  "a/b",
  "c/d",
]
`;

exports[`platform/github/index initPlatform() should support custom endpoint 1`] = `
Object {
  "endpoint": "https://ghe.renovatebot.com/",
  "gitAuthor": "undefined <user@domain.com>",
  "renovateUsername": "renovate-bot",
}
`;

exports[`platform/github/index initPlatform() should support default endpoint no email access 1`] = `
Object {
  "endpoint": "https://api.github.com/",
  "gitAuthor": undefined,
  "renovateUsername": "renovate-bot",
}
`;

exports[`platform/github/index initPlatform() should support default endpoint no email result 1`] = `
Object {
  "endpoint": "https://api.github.com/",
  "gitAuthor": undefined,
  "renovateUsername": "renovate-bot",
}
`;

exports[`platform/github/index initPlatform() should support default endpoint with email 1`] = `
Object {
  "endpoint": "https://api.github.com/",
  "gitAuthor": "undefined <user@domain.com>",
  "renovateUsername": "renovate-bot",
}
`;

exports[`platform/github/index initPlatform() should support gitAuthor and username 1`] = `
Object {
  "endpoint": "https://api.github.com/",
  "gitAuthor": "renovate@whitesourcesoftware.com",
  "renovateUsername": "renovate-bot",
}
`;

exports[`platform/github/index initRepo detects fork default branch mismatch 1`] = `
Object {
  "defaultBranch": "master",
  "isFork": false,
}
`;

exports[`platform/github/index initRepo should fork when forkMode 1`] = `
Object {
  "defaultBranch": "master",
  "isFork": false,
}
`;

exports[`platform/github/index initRepo should merge 1`] = `
Object {
  "defaultBranch": "master",
  "isFork": false,
}
`;

exports[`platform/github/index initRepo should not guess at merge 1`] = `
Object {
  "defaultBranch": "master",
  "isFork": false,
}
`;

exports[`platform/github/index initRepo should rebase 1`] = `
Object {
  "defaultBranch": "master",
  "isFork": false,
}
`;

exports[`platform/github/index initRepo should squash 1`] = `
Object {
  "defaultBranch": "master",
  "isFork": false,
}
`;

exports[`platform/github/index initRepo should update fork when forkMode 1`] = `
Object {
  "defaultBranch": "master",
  "isFork": false,
}
`;

exports[`platform/github/index massageMarkdown(input) returns updated pr body 1`] = `"https://github.com/foo/bar/issues/5 plus also [a link](https://togithub.com/foo/bar/issues/5)"`;
